#include <iostream>
#include <cstdio>
#include <vector>
#include <cmath>
#include <string>
using namespace std;

const int MOD = 1e9 + 7;

int cti(char c)
{
	switch (c)
	{
		case 'A':
			return 0;
		case 'C':
			return 1;
		case 'G':
			return 2;
		case 'T':
			return 3;
		default:
			return 4;
	}
}

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(nullptr);

	string s;
	cin >> s;

	int n = s.length();
	vector<vector<vector<vector<int>>>> dp(n, vector<vector<vector<int>>>(5, vector<vector<int>>(4, vector<int>(4, 0))));

	if (s[0] == '?') for (int i = 0; i < 4; i++) dp[0][4][i][i] = 1;
	else dp[0][4][cti(s[0])][cti(s[0])] = 1;

	for (int i = 1; i < n; i++) for (int l = 0; l < 4; l++) if ((s[i] == '?') || (l == cti(s[i])))
	{
		for (int j = 0; j < 5; j++) for (int k = 0; k < 4; k++) for (int m = 0; m < 4; m++) if (m != l)
		{
			dp[i][j][k][l] += dp[i - 1][j][k][m];
			dp[i][j][k][l] %= MOD;
		}

		for (int j = 0; j < 4; j++) for (int k = 0; k < 4; k++)
		{
			dp[i][j][l][l] += dp[i - 1][k][j][k];
			dp[i][j][l][l] %= MOD;
			dp[i][j][l][l] += dp[i - 1][4][j][k];
			dp[i][j][l][l] %= MOD;
		}
	}

	int ans = 0;
	for (int i = 0; i < 4; i++) for (int j = 0; j < 4; j++)
	{
		ans += dp[n - 1][i][j][i];
		ans %= MOD;
		ans += dp[n - 1][4][j][i];
		ans %= MOD;
	}

	cout << ans;
}
