#include <iostream>
#include <fstream>
#include <cstdio>
#include <vector>
#include <cmath>
using namespace std;

int main()
{
	ifstream fin("subrev.in");
	ofstream fout("subrev.out");

	ios::sync_with_stdio(false);
	fin.tie(nullptr);

	int n;
	fin >> n;
	vector<int> a(n);
	for (int i = 0; i < n; i++) fin >> a[i];
	for (int i = 0; i < n; i++) a[i]--;

	vector<vector<vector<vector<int>>>> dp(n, vector<vector<vector<int>>>(n, vector<vector<int>>(50, vector<int>(50, 0))));
	for (int i = 0; i < n; i++) for (int j = 0; j < n; j++) for (int k = 1; k < 50; k++) for (int l = 0; l < k; l++)
		dp[i][j][k][l] = -2;
	for (int i = 0; i < n; i++) for (int j = 0; j <= a[i]; j++) for (int k = a[i]; k < 50; k++) dp[i][i][j][k] = 1;
	for (int i = 1; i < n; i++) for (int j = i; j < n; j++) for (int k = 0; k < 50; k++) for (int l = k; l < 50; l++)
	{
		i = j - i;
		if (a[j] >= k) dp[i][j][k][l] = fmax(dp[i][j][k][l], dp[i + 1][j - 1][a[j]][l] + 1);
		if (a[i] <= l) dp[i][j][k][l] = fmax(dp[i][j][k][l], dp[i + 1][j - 1][k][a[i]] + 1);
		if (((k <= a[j]) && (a[j] <= a[i])) && (a[i] <= l)) dp[i][j][k][l] = fmax(dp[i][j][k][l],
			dp[i + 1][j - 1][a[j]][a[i]] + 2);
		if (a[i] >= k) dp[i][j][k][l] = fmax(dp[i][j][k][l], dp[i + 1][j][a[i]][l] + 1);
		if (a[j] <= l) dp[i][j][k][l] = fmax(dp[i][j][k][l], dp[i][j - 1][k][a[j]] + 1);
		dp[i][j][k][l] = fmax(dp[i][j][k][l], dp[i + 1][j][k][l]);
		dp[i][j][k][l] = fmax(dp[i][j][k][l], dp[i][j - 1][k][l]);
		i = j - i;
	}

	fout << dp[0][n - 1][0][49];
}
