#include <iostream>
#include <cstdio>
#include <vector>
#include <cmath>
using namespace std;
using ll = long long;

const ll MOD = 1e9 + 7;

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(nullptr);

	int n, k;
	cin >> n >> k;
	vector<int> id(n);
	for (int i = 0; i < n; i++) cin >> id[i];

	vector<vector<pair<ll, ll>>> dp(1 << k, vector<pair<ll, ll>>(k + 1, { 0, 0 }));
	for (int i = 0; i < n; i++) dp[id[i]][0].first++;

	for (int b = 0; b < k; b++) for (int i = 0; i < (1 << k); i++) if (!(i & (1 << b)))
	{
		for (int j = b + 1; j > -1; j--)
		{
			if (j == 0) dp[i ^ (1 << b)][j] = { 0, 0 };
			else
			{
				dp[i][j].first += dp[i ^ (1 << b)][j - 1].first, dp[i][j].second += dp[i ^ (1 << b)][j - 1].second;
				dp[i ^ (1 << b)][j] =
				{
					dp[i][j - 1].first + dp[i ^ (1 << b)][j - 1].first,
					dp[i][j - 1].second + dp[i ^ (1 << b)][j - 1].first + dp[i ^ (1 << b)][j - 1].second
				};
			}
		}
	}

	vector<ll> inv(1, 0);
	inv.push_back(1ll);
	for (int i = 2; i <= k; i++)
	{
		inv.push_back((MOD / i + 1) * inv[i - MOD % i]);
		inv.back() %= MOD;
	}

	for (int i = 0; i < n; i++)
	{
		ll ans = 0;
		for (int j = 1; j <= k; j++)
		{
			ans += inv[j] * dp[id[i]][j].second;
			ans %= MOD;
		}

		cout << ans << "\n";
	}
}
