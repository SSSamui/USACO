#include <iostream>
#include <cstdio>
#include <vector>
#include <cmath>
using namespace std;

const int INF = 1e9;

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(nullptr);

	int n;
	cin >> n;
	vector<vector<int>> w(n, vector<int>(n, 0));
	for (int i = 0; i < n; i++) for (int j = 0; j < i; j++) cin >> w[j][i];

	vector<vector<int>> dp(n, vector<int>(n, INF));
	for (int i = n - 1; i > -1; i--)
	{
		vector<int> psums(n);
		for (int j = i + 1; j < n; j++) psums[j] = psums[j - 1] - fmin(0, w[i][j]);

		dp[i][i] = psums[n - 1];
		for (int j = i + 1; j < n; j++) for (int k = i; k < j; k++) dp[i][j] = fmin(dp[i][j],
			dp[i][k] + dp[k + 1][j] - (psums[j] - psums[k + 1]) + w[i][k + 1]);
	}

	cout << dp[0][n - 1];
}
