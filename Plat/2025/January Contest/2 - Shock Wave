#include <iostream>
#include <cstdio>
#include <vector>
#include <cmath>
#include <stack>
using namespace std;
using ll = long long;

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(nullptr);

	int _;
	cin >> _;
	while (_--)
	{
		int n;
		cin >> n;
		vector<ll> a(n);
		for (int i = 0; i < n; i++) cin >> a[i];

		ll mxa = 0;
		for (int i = 0; i < n; i++) if (a[i] > mxa) mxa = a[i];
		ll l = 0, r = ((mxa + 1ll * (n - 2)) / (n - 1)) * 2;
		if (n % 2 == 1)
		{
			int hlf = n / 2;
			l = (a[hlf] + 1ll * (hlf - 1)) / hlf;
		}

		while (l < r)
		{
			ll k = l + (r - l) / 2;

			ll la = 0, ra = k;
			for (int i = 0; i < (n / 2); i++)
			{
				ll nra = k * (n - i - 1) - a[i], nla = a[n - i - 1] - k * i;
				nra /= (n - (2 * i) - 1), nla /= (n - (2 * i) - 1);
				if (nra < ra) ra = nra;
				if (nla > la) la = nla;
			}

			if (la < ra) r = k;
			else if (la > ra) l = k + 1;
			else
			{
				stack<pair<ll, ll>> invninc;
				for (int i = 0; i < n; i++)
				{
					ll rem = la * ((2 * i) - n + 1) + (k - 1ll) * (n - 1 - i);
					if (rem < a[i])
					{
						ll lft = a[i] - rem;
						ll lnposs = (1ll * i) - lft + 1ll, rnposs = (1ll * i) + lft - 1ll;
						if (lnposs < 0) lnposs = 0;
						if (rnposs >= 1ll * n) rnposs = 1ll * (n - 1);
						lnposs = fmax(lnposs, 0), rnposs = fmin(rnposs, n - 1);

						bool cont = true;
						while (cont)
						{
							if (invninc.empty())
							{
								invninc.push({ lnposs, rnposs });
								cont = false;
							}

							else if (rnposs <= invninc.top().second) cont = false;
							else if (lnposs <= invninc.top().first) invninc.pop();
							else if (lnposs <= invninc.top().second)
							{
								invninc.top().second = rnposs;
								cont = false;
							}
							
							else
							{
								invninc.push({ lnposs, rnposs });
								cont = false;
							}
						}
					}
				}

				ll mxposs = 1ll * (n - 1);
				while (!invninc.empty())
				{
					if (mxposs == invninc.top().second) mxposs = invninc.top().first - 1ll;
					invninc.pop();
				}

				if (mxposs == -1ll) l = k + 1;
				else if ((la == k) && (mxposs != 1ll * (n - 1))) l = k + 1;
				else r = k;
			}
		}

		cout << l << "\n";
	}
}
